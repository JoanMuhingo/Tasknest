{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/Title.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Title({\n  title,\n  onTitleUpdate,\n  onDeleteTitle\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitleName, setNewTitleName] = useState(title.name);\n  const handleTitleEdit = async () => {\n    if (!newTitleName.trim()) return;\n    try {\n      // Assuming you have a function to update the title in your backend\n      const response = await axios.put(`http://localhost:5000/titles/${title.id}`, {\n        name: newTitleName\n      });\n      onTitleUpdate(response.data);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n  const handleDeleteTitle = async () => {\n    try {\n      await axios.delete(`http://localhost:5000/titles/${title.id}`);\n      onDeleteTitle(title.id);\n    } catch (error) {\n      console.error('Error deleting title:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTitleName,\n      onChange: e => setNewTitleName(e.target.value),\n      onBlur: handleTitleEdit,\n      onKeyDown: e => {\n        if (e.key === \"Enter\") handleTitleEdit();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      onClick: () => setIsEditing(true),\n      children: title.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteTitle,\n      children: \"Delete Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Title, \"gO3tOPMg7Fm2vHHAAQsDUfpKEkI=\");\n_c = Title;\nexport default Title;\nvar _c;\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Title","title","onTitleUpdate","onDeleteTitle","_s","isEditing","setIsEditing","newTitleName","setNewTitleName","name","handleTitleEdit","trim","response","put","id","data","error","console","handleDeleteTitle","delete","className","children","type","value","onChange","e","target","onBlur","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/Title.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Title({ title, onTitleUpdate, onDeleteTitle }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitleName, setNewTitleName] = useState(title.name);\n\n  const handleTitleEdit = async () => {\n    if (!newTitleName.trim()) return;\n    try {\n      // Assuming you have a function to update the title in your backend\n      const response = await axios.put(`http://localhost:5000/titles/${title.id}`, { name: newTitleName });\n      onTitleUpdate(response.data);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Error updating title:', error);\n    }\n  };\n\n  const handleDeleteTitle = async () => {\n    try {\n      await axios.delete(`http://localhost:5000/titles/${title.id}`);\n      onDeleteTitle(title.id);\n    } catch (error) {\n      console.error('Error deleting title:', error);\n    }\n  };\n\n  return (\n    <div className=\"title\">\n      {isEditing ? (\n        <input\n          type=\"text\"\n          value={newTitleName}\n          onChange={(e) => setNewTitleName(e.target.value)}\n          onBlur={handleTitleEdit}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") handleTitleEdit();\n          }}\n        />\n      ) : (\n        <h3 onClick={() => setIsEditing(true)}>{title.name}</h3>\n      )}\n      <button onClick={handleDeleteTitle}>Delete Title</button>\n    </div>\n  );\n}\n\nexport default Title;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACK,KAAK,CAACQ,IAAI,CAAC;EAE5D,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACH,YAAY,CAACI,IAAI,CAAC,CAAC,EAAE;IAC1B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,gCAAgCZ,KAAK,CAACa,EAAE,EAAE,EAAE;QAAEL,IAAI,EAAEF;MAAa,CAAC,CAAC;MACpGL,aAAa,CAACU,QAAQ,CAACG,IAAI,CAAC;MAC5BT,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMrB,KAAK,CAACsB,MAAM,CAAC,gCAAgClB,KAAK,CAACa,EAAE,EAAE,CAAC;MAC9DX,aAAa,CAACF,KAAK,CAACa,EAAE,CAAC;IACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,OAAO;IAAAC,QAAA,GACnBhB,SAAS,gBACRN,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,YAAa;MACpBiB,QAAQ,EAAGC,CAAC,IAAKjB,eAAe,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,MAAM,EAAEjB,eAAgB;MACxBkB,SAAS,EAAGH,CAAC,IAAK;QAChB,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAEnB,eAAe,CAAC,CAAC;MAC1C;IAAE;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEFlC,OAAA;MAAImC,OAAO,EAAEA,CAAA,KAAM5B,YAAY,CAAC,IAAI,CAAE;MAAAe,QAAA,EAAEpB,KAAK,CAACQ;IAAI;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACxD,eACDlC,OAAA;MAAQmC,OAAO,EAAEhB,iBAAkB;MAAAG,QAAA,EAAC;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAAC7B,EAAA,CA3CQJ,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AA6Cd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}