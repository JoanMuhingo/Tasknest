{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/TaskPage.jsx\",\n  _s = $RefreshSig$();\n// TaskPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ListManager from './ListManager';\nimport TaskManager from './TaskManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [titles, setTitles] = useState([]);\n  const [selectedTitleId, setSelectedTitleId] = useState(null);\n  const fetchTitles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/titles');\n      setTitles(response.data);\n    } catch (error) {\n      console.error('Error fetching titles:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTitles();\n  }, []);\n  const handleSelectTitle = id => {\n    setSelectedTitleId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListManager, {\n      onSelectTitle: handleSelectTitle,\n      setTitles: setTitles,\n      titles: titles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), selectedTitleId && /*#__PURE__*/_jsxDEV(TaskManager, {\n      selectedTitleId: selectedTitleId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskPage, \"ddMzZsSzIXbBm7DvoiVELct69z8=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","ListManager","TaskManager","jsxDEV","_jsxDEV","TaskPage","_s","titles","setTitles","selectedTitleId","setSelectedTitleId","fetchTitles","response","get","data","error","console","handleSelectTitle","id","children","onSelectTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/TaskPage.jsx"],"sourcesContent":["// TaskPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ListManager from './ListManager';\nimport TaskManager from './TaskManager';\n\nconst TaskPage = () => {\n  const [titles, setTitles] = useState([]);\n  const [selectedTitleId, setSelectedTitleId] = useState(null);\n\n  const fetchTitles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/titles');\n      setTitles(response.data);\n    } catch (error) {\n      console.error('Error fetching titles:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTitles();\n  }, []);\n\n  const handleSelectTitle = (id) => {\n    setSelectedTitleId(id);\n  };\n\n  return (\n    <div>\n      <ListManager onSelectTitle={handleSelectTitle} setTitles={setTitles} titles={titles} />\n      {selectedTitleId && (\n        <TaskManager\n          selectedTitleId={selectedTitleId}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default TaskPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8BAA8B,CAAC;MAChEL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAIC,EAAE,IAAK;IAChCR,kBAAkB,CAACQ,EAAE,CAAC;EACxB,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACH,WAAW;MAACmB,aAAa,EAAEH,iBAAkB;MAACT,SAAS,EAAEA,SAAU;MAACD,MAAM,EAAEA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtFf,eAAe,iBACdL,OAAA,CAACF,WAAW;MACVO,eAAe,EAAEA;IAAgB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}