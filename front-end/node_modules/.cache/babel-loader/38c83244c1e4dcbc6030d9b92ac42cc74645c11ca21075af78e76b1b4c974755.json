{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/TaskList.jsx\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onEdit,\n  onDelete,\n  onToggle\n}) => {\n  console.log(\"Tasks received:\", tasks);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks && tasks.length > 0 ? tasks.map((task, index) => task && task.id ? /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      onEdit: onEdit,\n      onDelete: onDelete,\n      onToggle: onToggle\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Invalid task\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }, this) // Handle invalid task case\n    ) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","TaskList","tasks","onEdit","onDelete","onToggle","console","log","children","length","map","task","index","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/TaskList.jsx"],"sourcesContent":["import React from 'react';\nimport TaskItem from './TaskItem';\n\nconst TaskList = ({ tasks, onEdit, onDelete, onToggle }) => {\n    console.log(\"Tasks received:\", tasks);\n    return (\n        <ul>\n            {tasks && tasks.length > 0 ? (\n                tasks.map((task, index) => \n                    task && task.id ? (\n                        <TaskItem\n                            key={task.id}\n                            task={task}\n                            onEdit={onEdit}\n                            onDelete={onDelete}\n                            onToggle={onToggle}\n                        />\n                    ) : (\n                        <li key={index}>Invalid task</li> // Handle invalid task case\n                    )\n                )\n            ) : (\n                <p>No tasks available</p>\n            )}\n        </ul>\n    )\n};\nexport default TaskList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACxDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,KAAK,CAAC;EACrC,oBACIF,OAAA;IAAAQ,QAAA,EACKN,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,GACtBP,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAClBD,IAAI,IAAIA,IAAI,CAACE,EAAE,gBACXb,OAAA,CAACF,QAAQ;MAELa,IAAI,EAAEA,IAAK;MACXR,MAAM,EAAEA,MAAO;MACfC,QAAQ,EAAEA,QAAS;MACnBC,QAAQ,EAAEA;IAAS,GAJdM,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKf,CAAC,gBAEFjB,OAAA;MAAAQ,QAAA,EAAgB;IAAY,GAAnBI,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,CAAC;IAE1C,CAAC,gBAEDjB,OAAA;MAAAQ,QAAA,EAAG;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACC,EAAA,GAvBIjB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}