{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/TaskManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport EditTaskForm from './EditTaskForm';\nimport TaskList from './TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = ({\n  selectedTitleId,\n  selectedList\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editTask, setEditTask] = useState(null);\n\n  // Fetch tasks when the selected title changes\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (selectedTitleId) {\n        try {\n          const response = await axios.get(`http://localhost:5000/titles/${selectedTitleId}/tasks`);\n          setTasks(response.data.tasks); // Assuming your API returns { tasks: [...] }\n        } catch (error) {\n          console.error(\"Error fetching tasks:\", error);\n        }\n      }\n    };\n    fetchTasks();\n  }, [selectedTitleId]);\n\n  // Add a new task\n  const addTask = async newTask => {\n    try {\n      const response = await axios.post(`http://localhost:5000/titles/${selectedTitleId}/tasks`, newTask);\n      setTasks(prevTasks => [...prevTasks, response.data.task]); // Update the task state with the newly added task\n      console.log('Task added successfully:', response.data.task);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Update an existing task\n  const updateTask = async updatedTask => {\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${updatedTask.id}`, updatedTask);\n      setTasks(prevTasks => prevTasks.map(task => task.id === updatedTask.id ? response.data.task : task)); // Update the task in state\n      console.log('Task updated successfully:', response.data.task);\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== id)); // Remove the deleted task from state\n      console.log('Task deleted successfully:', id);\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  // Toggle task completion\n  const toggleTask = async id => {\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${id}/toggle`);\n      setTasks(prevTasks => prevTasks.map(task => task.id === id ? response.data.task : task)); // Update the task in state\n      console.log('Task toggled successfully:', response.data.task);\n    } catch (error) {\n      console.error(\"Error toggling task:\", error);\n    }\n  };\n\n  // Check if selectedList is defined\n  if (!selectedList) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Select a title to view tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this); // Or handle this case as needed\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: selectedList.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), !editTask && /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: addTask // Pass the addTask function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), editTask && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: editTask,\n      onSave: updateTask,\n      onCancel: () => setEditTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks // Use the fetched tasks array here\n      ,\n      onEdit: setEditTask,\n      onDelete: deleteTask,\n      onToggle: toggleTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"ELC/NP/DZmfG3NcRIvxLoMDVlnI=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskForm","EditTaskForm","TaskList","jsxDEV","_jsxDEV","TaskManager","selectedTitleId","selectedList","_s","tasks","setTasks","editTask","setEditTask","fetchTasks","response","get","data","error","console","addTask","newTask","post","prevTasks","task","log","updateTask","updatedTask","put","id","map","deleteTask","delete","filter","toggleTask","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onAddTask","onSave","onCancel","onEdit","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/TaskManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskForm from './TaskForm';\nimport EditTaskForm from './EditTaskForm';\nimport TaskList from './TaskList';\n\nconst TaskManager = ({ selectedTitleId, selectedList }) => {\n    const [tasks, setTasks] = useState([]);\n    const [editTask, setEditTask] = useState(null);\n\n    // Fetch tasks when the selected title changes\n    useEffect(() => {\n        const fetchTasks = async () => {\n            if (selectedTitleId) {\n                try {\n                    const response = await axios.get(`http://localhost:5000/titles/${selectedTitleId}/tasks`);\n                    setTasks(response.data.tasks); // Assuming your API returns { tasks: [...] }\n                } catch (error) {\n                    console.error(\"Error fetching tasks:\", error);\n                }\n            }\n        };\n\n        fetchTasks();\n    }, [selectedTitleId]);\n\n    // Add a new task\n    const addTask = async (newTask) => {\n        try {\n            const response = await axios.post(`http://localhost:5000/titles/${selectedTitleId}/tasks`, newTask);\n            setTasks(prevTasks => [...prevTasks, response.data.task]); // Update the task state with the newly added task\n            console.log('Task added successfully:', response.data.task);\n        } catch (error) {\n            console.error(\"Error adding task:\", error);\n        }\n    };\n\n    // Update an existing task\n    const updateTask = async (updatedTask) => {\n        try {\n            const response = await axios.put(`http://localhost:5000/tasks/${updatedTask.id}`, updatedTask);\n            setTasks(prevTasks => prevTasks.map(task => (task.id === updatedTask.id ? response.data.task : task))); // Update the task in state\n            console.log('Task updated successfully:', response.data.task);\n        } catch (error) {\n            console.error(\"Error updating task:\", error);\n        }\n    };\n\n    // Delete a task\n    const deleteTask = async (id) => {\n        try {\n            await axios.delete(`http://localhost:5000/tasks/${id}`);\n            setTasks(prevTasks => prevTasks.filter(task => task.id !== id)); // Remove the deleted task from state\n            console.log('Task deleted successfully:', id);\n        } catch (error) {\n            console.error(\"Error deleting task:\", error);\n        }\n    };\n\n    // Toggle task completion\n    const toggleTask = async (id) => {\n        try {\n            const response = await axios.put(`http://localhost:5000/tasks/${id}/toggle`);\n            setTasks(prevTasks => prevTasks.map(task => (task.id === id ? response.data.task : task))); // Update the task in state\n            console.log('Task toggled successfully:', response.data.task);\n        } catch (error) {\n            console.error(\"Error toggling task:\", error);\n        }\n    };\n\n    // Check if selectedList is defined\n    if (!selectedList) {\n        return <div>Select a title to view tasks</div>; // Or handle this case as needed\n    }\n\n    return (\n        <div className=\"task-manager\">\n            <h3>{selectedList.title}</h3>\n\n            {!editTask && (\n                <TaskForm \n                    onAddTask={addTask} // Pass the addTask function\n                />\n            )}\n\n            {editTask && (\n                <EditTaskForm\n                    task={editTask}\n                    onSave={updateTask}\n                    onCancel={() => setEditTask(null)}\n                />\n            )}\n\n            <TaskList\n                tasks={tasks} // Use the fetched tasks array here\n                onEdit={setEditTask}\n                onDelete={deleteTask}\n                onToggle={toggleTask}\n            />\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}