{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/ListManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskManager from './TaskManager'; // Import TaskManager\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListManager = ({\n  onSelectTitle\n}) => {\n  _s();\n  const [taskLists, setTaskLists] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedTitle, setSelectedTitle] = useState(null);\n  useEffect(() => {\n    fetchTaskLists();\n  }, []);\n  const fetchTaskLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/titles');\n      setTaskLists(response.data);\n    } catch (error) {\n      console.error('Error fetching task lists:', error);\n    }\n  };\n  const addTaskList = async () => {\n    if (!newTitle.trim()) return;\n    try {\n      const response = await axios.post('http://localhost:5000/titles', {\n        name: newTitle\n      });\n      setTaskLists([...taskLists, response.data]);\n      setNewTitle('');\n      setSelectedTitle(response.data);\n      onSelectTitle(response.data.id); // Notify parent about the new title selection\n    } catch (error) {\n      console.error('Error adding task list:', error);\n    }\n  };\n  const handleSelectTitle = title => {\n    console.log(\"Selected Title ID:\", title.id);\n    setSelectedTitle(title);\n    onSelectTitle(title.id); // Notify parent about the selected title\n  };\n  const handleTitleUpdate = updatedTitle => {\n    setTaskLists(taskLists.map(list => list.id === updatedTitle.id ? updatedTitle : list));\n    setSelectedTitle(null);\n  };\n  const handleDeleteTitle = async titleId => {\n    try {\n      await axios.delete(`http://localhost:5000/titles/${titleId}`);\n      setTaskLists(taskLists.filter(list => list.id !== titleId)); // Update state immediately\n      setSelectedTitle(null); // Deselect the title if it was deleted\n      onSelectTitle(null); // Clear selection in parent\n    } catch (error) {\n      console.error('Error deleting task list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-manager\",\n    children: !selectedTitle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTitle,\n          onChange: e => setNewTitle(e.target.value),\n          placeholder: \"Add a new title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTaskList,\n          children: \"Add Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"titles-list\",\n        children: taskLists.map(title => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"title-item\",\n          children: [title.name, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectTitle(title),\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTitle(title.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, title.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedTitle.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskManager, {\n        selectedTitleId: selectedTitle.id,\n        setTaskLists: setTaskLists // Pass setTaskLists to TaskManager\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTitle(null),\n        children: \"Back to Titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_s(ListManager, \"hM+M4CYUI2oClhDd0IFqjdY2a1o=\");\n_c = ListManager;\nexport default ListManager;\nvar _c;\n$RefreshReg$(_c, \"ListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskManager","jsxDEV","_jsxDEV","Fragment","_Fragment","ListManager","onSelectTitle","_s","taskLists","setTaskLists","newTitle","setNewTitle","selectedTitle","setSelectedTitle","fetchTaskLists","response","get","data","error","console","addTaskList","trim","post","name","id","handleSelectTitle","title","log","handleTitleUpdate","updatedTitle","map","list","handleDeleteTitle","titleId","delete","filter","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","selectedTitleId","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/ListManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskManager from './TaskManager'; // Import TaskManager\n\nconst ListManager = ({ onSelectTitle }) => {\n  const [taskLists, setTaskLists] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedTitle, setSelectedTitle] = useState(null);\n\n  useEffect(() => {\n    fetchTaskLists();\n  }, []);\n\n  const fetchTaskLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/titles');\n      setTaskLists(response.data);\n    } catch (error) {\n      console.error('Error fetching task lists:', error);\n    }\n  };\n\n  const addTaskList = async () => {\n    if (!newTitle.trim()) return;\n    try {\n      const response = await axios.post('http://localhost:5000/titles', { name: newTitle });\n      setTaskLists([...taskLists, response.data]);\n      setNewTitle('');\n      setSelectedTitle(response.data);\n      onSelectTitle(response.data.id); // Notify parent about the new title selection\n    } catch (error) {\n      console.error('Error adding task list:', error);\n    }\n  };\n\n  const handleSelectTitle = (title) => {\n    console.log(\"Selected Title ID:\", title.id);\n    setSelectedTitle(title);\n    onSelectTitle(title.id); // Notify parent about the selected title\n  };\n\n  const handleTitleUpdate = (updatedTitle) => {\n    setTaskLists(taskLists.map((list) => (list.id === updatedTitle.id ? updatedTitle : list)));\n    setSelectedTitle(null);\n  };\n\n  const handleDeleteTitle = async (titleId) => {\n    try {\n        await axios.delete(`http://localhost:5000/titles/${titleId}`);\n        setTaskLists(taskLists.filter((list) => list.id !== titleId)); // Update state immediately\n        setSelectedTitle(null); // Deselect the title if it was deleted\n        onSelectTitle(null); // Clear selection in parent\n    } catch (error) {\n        console.error('Error deleting task list:', error);\n    }\n};\n\nreturn (\n  <div className=\"list-manager\">\n    {!selectedTitle ? (\n      <>\n        {/* Add new title form */}\n        <div className=\"add-title\">\n          <input\n            type=\"text\"\n            value={newTitle}\n            onChange={(e) => setNewTitle(e.target.value)}\n            placeholder=\"Add a new title\"\n          />\n          <button onClick={addTaskList}>Add Title</button>\n        </div>\n\n        {/* Display the list of titles */}\n        <ul className=\"titles-list\">\n          {taskLists.map((title) => (\n            <li key={title.id} className=\"title-item\">\n              {title.name}\n              <div className=\"title-actions\">\n                <button onClick={() => handleSelectTitle(title)}>Open</button>\n                <button onClick={() => handleDeleteTitle(title.id)}>Delete</button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </>\n    ) : (\n      <div className=\"task-form-container\">\n        {/* Display the selected title and TaskManager */}\n        <h2>{selectedTitle.name}</h2>\n        <TaskManager \n          selectedTitleId={selectedTitle.id} \n          setTaskLists={setTaskLists} // Pass setTaskLists to TaskManager\n        />\n        <button onClick={() => setSelectedTitle(null)}>Back to Titles</button>\n      </div>\n    )}\n  </div>\n);\n};\n\nexport default ListManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}