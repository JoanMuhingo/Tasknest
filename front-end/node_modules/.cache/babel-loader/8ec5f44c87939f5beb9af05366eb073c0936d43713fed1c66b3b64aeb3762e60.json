{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/TaskManager.jsx\",\n  _s = $RefreshSig$();\n// TaskManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport EditTaskForm from './EditTaskForm';\nimport './TaskManager.module.css';\nimport './Animation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = ({\n  selectedTitleId\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editTask, setEditTask] = useState(null);\n  const [titleName, setTitleName] = useState('');\n\n  // Fetch tasks when selectedTitleId changes\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/titles/${selectedTitleId}`);\n        setTasks(response.data.tasks);\n        setTitleName(response.data.name);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        alert('Failed to fetch tasks. Please try again.');\n      }\n    };\n    if (selectedTitleId) {\n      fetchTasks();\n    }\n  }, [selectedTitleId]);\n\n  // Add a new task\n  const addTask = async (description, due_date, priority) => {\n    try {\n      const response = await axios.post(`http://localhost:5000/titles/${selectedTitleId}/tasks`, {\n        description,\n        due_date,\n        priority\n      });\n      setTasks([...tasks, response.data]);\n    } catch (error) {\n      console.error('Error adding task:', error);\n      alert('Failed to add task. Please try again.');\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async taskId => {\n    if (!window.confirm('Are you sure you want to delete this task?')) return;\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${taskId}`);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      alert('Failed to delete task. Please try again.');\n    }\n  };\n\n  // Update a task\n  const updateTask = async updatedTask => {\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${updatedTask.id}`, updatedTask);\n      setTasks(tasks.map(task => task.id === updatedTask.id ? response.data : task));\n      setEditTask(null);\n    } catch (error) {\n      console.error('Error updating task:', error);\n      alert('Failed to update task. Please try again.');\n    }\n  };\n\n  // Toggle task completion\n  const toggleTask = async taskId => {\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${taskId}/toggle`);\n      setTasks(tasks.map(task => task.id === taskId ? response.data : task));\n    } catch (error) {\n      console.error('Error toggling task:', error);\n      alert('Failed to toggle task. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-manager\",\n    style: {\n      border: '1px solid #ccc',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Tasks for: \", titleName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), editTask && /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: editTask,\n      onUpdateTask: updateTask,\n      onCancel: () => setEditTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDeleteTask: deleteTask,\n      onEditTask: setEditTask,\n      onToggleTask: toggleTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"yN5xqIbVOHgrYwH8dvuGLufWC6Q=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","TaskForm","EditTaskForm","jsxDEV","_jsxDEV","TaskManager","selectedTitleId","_s","tasks","setTasks","editTask","setEditTask","titleName","setTitleName","fetchTasks","response","get","data","name","error","console","alert","addTask","description","due_date","priority","post","deleteTask","taskId","window","confirm","delete","filter","task","id","updateTask","updatedTask","put","map","toggleTask","className","style","border","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onUpdateTask","onCancel","onDeleteTask","onEditTask","onToggleTask","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/TaskManager.jsx"],"sourcesContent":["// TaskManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport EditTaskForm from './EditTaskForm';\nimport './TaskManager.module.css';\nimport './Animation.css';\n\nconst TaskManager = ({ selectedTitleId }) => {\n    const [tasks, setTasks] = useState([]);\n    const [editTask, setEditTask] = useState(null);\n    const [titleName, setTitleName] = useState('');\n\n    // Fetch tasks when selectedTitleId changes\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5000/titles/${selectedTitleId}`);\n                setTasks(response.data.tasks);\n                setTitleName(response.data.name);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n                alert('Failed to fetch tasks. Please try again.');\n            }\n        };\n\n        if (selectedTitleId) {\n            fetchTasks();\n        }\n    }, [selectedTitleId]);\n\n    // Add a new task\n    const addTask = async (description, due_date, priority) => {\n        try {\n            const response = await axios.post(`http://localhost:5000/titles/${selectedTitleId}/tasks`, {\n                description,\n                due_date,\n                priority\n            });\n            setTasks([...tasks, response.data]);\n        } catch (error) {\n            console.error('Error adding task:', error);\n            alert('Failed to add task. Please try again.');\n        }\n    };\n\n    // Delete a task\n    const deleteTask = async (taskId) => {\n        if (!window.confirm('Are you sure you want to delete this task?')) return;\n\n        try {\n            await axios.delete(`http://localhost:5000/tasks/${taskId}`);\n            setTasks(tasks.filter(task => task.id !== taskId));\n        } catch (error) {\n            console.error('Error deleting task:', error);\n            alert('Failed to delete task. Please try again.');\n        }\n    };\n\n    // Update a task\n    const updateTask = async (updatedTask) => {\n        try {\n            const response = await axios.put(`http://localhost:5000/tasks/${updatedTask.id}`, updatedTask);\n            setTasks(tasks.map(task => task.id === updatedTask.id ? response.data : task));\n            setEditTask(null);\n        } catch (error) {\n            console.error('Error updating task:', error);\n            alert('Failed to update task. Please try again.');\n        }\n    };\n\n    // Toggle task completion\n    const toggleTask = async (taskId) => {\n        try {\n            const response = await axios.put(`http://localhost:5000/tasks/${taskId}/toggle`);\n            setTasks(tasks.map(task => task.id === taskId ? response.data : task));\n        } catch (error) {\n            console.error('Error toggling task:', error);\n            alert('Failed to toggle task. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"task-manager\" style={{ border: '1px solid #ccc', padding: '20px' }}>\n            <h2>Tasks for: {titleName}</h2>\n            <TaskForm onAddTask={addTask} />\n            {editTask && <EditTaskForm task={editTask} onUpdateTask={updateTask} onCancel={() => setEditTask(null)} />}\n            <TaskList\n                tasks={tasks}\n                onDeleteTask={deleteTask}\n                onEditTask={setEditTask}\n                onToggleTask={toggleTask}\n            />\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}