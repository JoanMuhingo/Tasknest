{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/TaskManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskList from \"./TaskList\";\nimport AddTaskForm from \"./TaskForm\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManager({\n  selectedTitleId,\n  setTaskLists\n}) {\n  _s();\n  const [editTask, setEditTask] = useState(null);\n  const [selectedList, setSelectedList] = useState(null);\n\n  // Fetch tasks for the selected title\n  useEffect(() => {\n    console.log(\"Current selectedTitleId in TaskManager:\", selectedTitleId);\n    const fetchTasks = async () => {\n      if (!selectedTitleId) return; // If no title selected, do nothing\n      try {\n        const response = await axios.get(`http://localhost:5000/titles/${selectedTitleId}`);\n        setSelectedList(response.data); // This should include tasks\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, [selectedTitleId]);\n  const addTask = async description => {\n    try {\n      const response = await axios.post(`http://localhost:5000/titles/${selectedTitleId}/tasks`, {\n        task_title: description\n      });\n\n      // Immediately update the state without needing to refetch\n      const newTask = response.data;\n\n      // Update the tasks in the selectedList\n      setSelectedList(prevList => ({\n        ...prevList,\n        tasks: [...prevList.tasks, newTask] // Add the new task to the existing tasks\n      }));\n\n      // Optionally, you could also update the overall task lists\n      setTaskLists(prevLists => prevLists.map(list => list.id === selectedTitleId ? {\n        ...list,\n        tasks: [...list.tasks, newTask]\n      } : list));\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Update task\n  const updateTask = async updatedTask => {\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${updatedTask.id}`, updatedTask);\n      const updatedList = {\n        ...selectedList,\n        tasks: selectedList.tasks.map(task => task.id === updatedTask.id ? response.data : task)\n      };\n      setTaskLists(prev => prev.map(list => list.id === selectedTitleId ? updatedList : list));\n      setEditTask(null);\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Delete task\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      const updatedList = {\n        ...selectedList,\n        tasks: selectedList.tasks.filter(task => task.id !== id)\n      };\n      setTaskLists(prev => prev.map(list => list.id === selectedTitleId ? updatedList : list));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  // Toggle task\n  const toggleTask = async id => {\n    const task = selectedList.tasks.find(t => t.id === id);\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${id}`, {\n        done: !task.done\n      });\n      const updatedList = {\n        ...selectedList,\n        tasks: selectedList.tasks.map(t => t.id === id ? response.data : t)\n      };\n      setTaskLists(prev => prev.map(list => list.id === selectedTitleId ? updatedList : list));\n    } catch (error) {\n      console.error(\"Error toggling task:\", error);\n    }\n  };\n  if (!selectedList) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Select a title to manage tasks.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      children: selectedList ? selectedList.title : \"Title not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), !editTask && selectedList && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      selectedTitleId: selectedTitleId,\n      onAddTask: description => addTask(description)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), editTask ? /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: editTask,\n      onSave: updateTask,\n      onCancel: () => setEditTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: selectedList ? selectedList.tasks : [],\n      onEdit: setEditTask,\n      onDelete: deleteTask,\n      onToggle: toggleTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"M/cvuHPLIBgQ76gQ/ktJ5IIMDTM=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","AddTaskForm","EditTaskForm","axios","jsxDEV","_jsxDEV","TaskManager","selectedTitleId","setTaskLists","_s","editTask","setEditTask","selectedList","setSelectedList","console","log","fetchTasks","response","get","data","error","addTask","description","post","task_title","newTask","prevList","tasks","prevLists","map","list","id","updateTask","updatedTask","put","updatedList","task","prev","deleteTask","delete","filter","toggleTask","find","t","done","children","fileName","_jsxFileName","lineNumber","columnNumber","style","cursor","title","onAddTask","onSave","onCancel","onEdit","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/TaskManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TaskList from \"./TaskList\";\nimport AddTaskForm from \"./TaskForm\";\nimport EditTaskForm from \"./EditTaskForm\";\nimport axios from \"axios\";\n\nfunction TaskManager({ selectedTitleId, setTaskLists }) {\n  const [editTask, setEditTask] = useState(null);\n  const [selectedList, setSelectedList] = useState(null);\n\n  // Fetch tasks for the selected title\n  useEffect(() => {\n    console.log(\"Current selectedTitleId in TaskManager:\", selectedTitleId);\n    const fetchTasks = async () => {\n      if (!selectedTitleId) return; // If no title selected, do nothing\n      try {\n        const response = await axios.get(`http://localhost:5000/titles/${selectedTitleId}`);\n        setSelectedList(response.data); // This should include tasks\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, [selectedTitleId]);\n  \n  const addTask = async (description) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:5000/titles/${selectedTitleId}/tasks`,\n        { task_title: description }\n      );\n  \n      // Immediately update the state without needing to refetch\n      const newTask = response.data;\n  \n      // Update the tasks in the selectedList\n      setSelectedList((prevList) => ({\n        ...prevList,\n        tasks: [...prevList.tasks, newTask], // Add the new task to the existing tasks\n      }));\n  \n      // Optionally, you could also update the overall task lists\n      setTaskLists((prevLists) =>\n        prevLists.map((list) =>\n          list.id === selectedTitleId\n            ? { ...list, tasks: [...list.tasks, newTask] }\n            : list\n        )\n      );\n  \n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  \n  \n  \n  \n\n  // Update task\n  const updateTask = async (updatedTask) => {\n    try {\n      const response = await axios.put(\n        `http://localhost:5000/tasks/${updatedTask.id}`,\n        updatedTask\n      );\n      const updatedList = {\n        ...selectedList,\n        tasks: selectedList.tasks.map((task) =>\n          task.id === updatedTask.id ? response.data : task\n        ),\n      };\n      setTaskLists((prev) =>\n        prev.map((list) => (list.id === selectedTitleId ? updatedList : list))\n      );\n      setEditTask(null);\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Delete task\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      const updatedList = {\n        ...selectedList,\n        tasks: selectedList.tasks.filter((task) => task.id !== id),\n      };\n      setTaskLists((prev) =>\n        prev.map((list) => (list.id === selectedTitleId ? updatedList : list))\n      );\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  // Toggle task\n  const toggleTask = async (id) => {\n    const task = selectedList.tasks.find((t) => t.id === id);\n    try {\n      const response = await axios.put(`http://localhost:5000/tasks/${id}`, {\n        done: !task.done,\n      });\n      const updatedList = {\n        ...selectedList,\n        tasks: selectedList.tasks.map((t) =>\n          t.id === id ? response.data : t\n        ),\n      };\n      setTaskLists((prev) =>\n        prev.map((list) => (list.id === selectedTitleId ? updatedList : list))\n      );\n    } catch (error) {\n      console.error(\"Error toggling task:\", error);\n    }\n  };\n\n  if (!selectedList) return <div>Select a title to manage tasks.</div>;\n\n  return (\n    <div>\n      {/* Display the title section */}\n      <h3 style={{ cursor: \"pointer\" }}>\n      {selectedList ? selectedList.title : \"Title not found\"}\n      </h3>\n\n      {/* Conditionally render AddTaskForm based on the selected title */}\n      {!editTask && selectedList && (\n      <AddTaskForm \n        selectedTitleId={selectedTitleId}\n        onAddTask={(description) => addTask(description)}\n      />\n      )}\n\n      {editTask ? (\n        <EditTaskForm\n          task={editTask}\n          onSave={updateTask}\n          onCancel={() => setEditTask(null)}\n        />\n      ) : null}\n\n      {/* TaskList component */}\n      <TaskList\n        tasks={selectedList ? selectedList.tasks : []}\n        onEdit={setEditTask}\n        onDelete={deleteTask}\n        onToggle={toggleTask}\n      />\n    </div>\n  );\n}\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}