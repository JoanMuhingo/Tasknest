{"ast":null,"code":"var _jsxFileName = \"/home/jojo/Tasknest/front-end/src/components/ListManager.jsx\",\n  _s = $RefreshSig$();\n// ListManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListManager = ({\n  onSelectTitle\n}) => {\n  _s();\n  const [taskLists, setTaskLists] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  useEffect(() => {\n    fetchTaskLists();\n  }, []);\n  const fetchTaskLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/titles');\n      setTaskLists(response.data);\n    } catch (error) {\n      console.error('Error fetching task lists:', error);\n    }\n  };\n  const addTaskList = async () => {\n    if (!newTitle.trim()) return;\n    try {\n      const response = await axios.post('http://localhost:5000/titles', {\n        name: newTitle\n      });\n      setTaskLists([...taskLists, response.data]);\n      setNewTitle('');\n      onSelectTitle(response.data.id); // Notify parent about the new title selection\n    } catch (error) {\n      console.error('Error adding task list:', error);\n    }\n  };\n  const handleSelectTitle = title => {\n    onSelectTitle(title.id); // Notify parent about the selected title\n  };\n  const handleDeleteTitle = async titleId => {\n    try {\n      await axios.delete(`http://localhost:5000/titles/${titleId}`);\n      setTaskLists(taskLists.filter(list => list.id !== titleId)); // Update state immediately\n      onSelectTitle(null); // Clear selection in parent\n    } catch (error) {\n      console.error('Error deleting task list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTitle,\n        onChange: e => setNewTitle(e.target.value),\n        placeholder: \"Add a new title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTaskList,\n        children: \"Add Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"titles-list\",\n      children: taskLists.map(title => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"title-item\",\n        children: [title.name, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectTitle(title),\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTitle(title.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, title.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ListManager, \"i2Fh+Gsfcdl8BDFKdBzEwD/IImg=\");\n_c = ListManager;\nexport default ListManager;\nvar _c;\n$RefreshReg$(_c, \"ListManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ListManager","onSelectTitle","_s","taskLists","setTaskLists","newTitle","setNewTitle","fetchTaskLists","response","get","data","error","console","addTaskList","trim","post","name","id","handleSelectTitle","title","handleDeleteTitle","titleId","delete","filter","list","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/home/jojo/Tasknest/front-end/src/components/ListManager.jsx"],"sourcesContent":["// ListManager.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ListManager = ({ onSelectTitle }) => {\n  const [taskLists, setTaskLists] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n\n  useEffect(() => {\n    fetchTaskLists();\n  }, []);\n\n  const fetchTaskLists = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/titles');\n      setTaskLists(response.data);\n    } catch (error) {\n      console.error('Error fetching task lists:', error);\n    }\n  };\n\n  const addTaskList = async () => {\n    if (!newTitle.trim()) return;\n    try {\n      const response = await axios.post('http://localhost:5000/titles', { name: newTitle });\n      setTaskLists([...taskLists, response.data]);\n      setNewTitle('');\n      onSelectTitle(response.data.id); // Notify parent about the new title selection\n    } catch (error) {\n      console.error('Error adding task list:', error);\n    }\n  };\n\n  const handleSelectTitle = (title) => {\n    onSelectTitle(title.id); // Notify parent about the selected title\n  };\n\n  const handleDeleteTitle = async (titleId) => {\n    try {\n      await axios.delete(`http://localhost:5000/titles/${titleId}`);\n      setTaskLists(taskLists.filter((list) => list.id !== titleId)); // Update state immediately\n      onSelectTitle(null); // Clear selection in parent\n    } catch (error) {\n      console.error('Error deleting task list:', error);\n    }\n  };\n\n  return (\n    <div className=\"list-manager\">\n      <div className=\"add-title\">\n        <input\n          type=\"text\"\n          value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n          placeholder=\"Add a new title\"\n        />\n        <button onClick={addTaskList}>Add Title</button>\n      </div>\n      <ul className=\"titles-list\">\n        {taskLists.map((title) => (\n          <li key={title.id} className=\"title-item\">\n            {title.name}\n            <div className=\"title-actions\">\n              <button onClick={() => handleSelectTitle(title)}>Open</button>\n              <button onClick={() => handleDeleteTitle(title.id)}>Delete</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ListManager;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,8BAA8B,CAAC;MAChEL,YAAY,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACR,QAAQ,CAACS,IAAI,CAAC,CAAC,EAAE;IACtB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMX,KAAK,CAACkB,IAAI,CAAC,8BAA8B,EAAE;QAAEC,IAAI,EAAEX;MAAS,CAAC,CAAC;MACrFD,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEK,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC3CJ,WAAW,CAAC,EAAE,CAAC;MACfL,aAAa,CAACO,QAAQ,CAACE,IAAI,CAACO,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnClB,aAAa,CAACkB,KAAK,CAACF,EAAE,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3C,IAAI;MACF,MAAMxB,KAAK,CAACyB,MAAM,CAAC,gCAAgCD,OAAO,EAAE,CAAC;MAC7DjB,YAAY,CAACD,SAAS,CAACoB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKI,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/DpB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B3B,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB3B,OAAA;QACE4B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,WAAW,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFrC,OAAA;QAAQsC,OAAO,EAAExB,WAAY;QAAAa,QAAA,EAAC;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNrC,OAAA;MAAI0B,SAAS,EAAC,aAAa;MAAAC,QAAA,EACxBvB,SAAS,CAACmC,GAAG,CAAEnB,KAAK,iBACnBpB,OAAA;QAAmB0B,SAAS,EAAC,YAAY;QAAAC,QAAA,GACtCP,KAAK,CAACH,IAAI,eACXjB,OAAA;UAAK0B,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B3B,OAAA;YAAQsC,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACC,KAAK,CAAE;YAAAO,QAAA,EAAC;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9DrC,OAAA;YAAQsC,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACD,KAAK,CAACF,EAAE,CAAE;YAAAS,QAAA,EAAC;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA,GALCjB,KAAK,CAACF,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClC,EAAA,CAnEIF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAqEjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}